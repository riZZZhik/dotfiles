#!/usr/bin/env bash

# Source helpers

source "$(dirname "$0")/helpers"

# Initialize functions

update_linux() {
  if [ "$(uname)" != "Linux" ]; then
    return
  fi

  info "Updating packet managers..."
  sudo apt update && sudo apt upgrade

  finish
}

install_clt() {
  if [ "$(uname)" != "Darwin" ]; then
    return
  fi

  info "Trying to detect installed Command Line Tools for Xcode..."

  xcode-select -p &>/dev/null
  if [ $? -ne 0 ]; then
    info "Installing Command Line Tools for Xcode..."
    touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    PROD=$(softwareupdate -l | grep "\*.*Command Line" | tail -n 1 | sed 's/^[^C]* //')
    softwareupdate -i "$PROD" --verbose
  else
    success "You already have Command Line Tools for Xcode installed. Skipping..."
  fi

  finish
}

install_homebrew() {
  if [ "$(uname)" != "Darwin" ]; then
    return
  fi

  info "Trying to detect installed Homebrew..."

  if ! _exists /opt/homebrew/bin/brew; then
    info "Installing Homebrew..."
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    eval "$(/opt/homebrew/bin/brew shellenv)"
  else
    success "You already have Homebrew installed. Skipping..."
  fi

  finish
}

install_software() {
  if [ "$(uname)" != "Darwin" ]; then
    echo "Installing software is only supported for macos."
    echo "You can manually download software. It is listed in ${BOLD}Brewfile${RESET}."
    return
  fi

  info "Installing software..."

  # Homebrew Bundle
  if _exists /opt/homebrew/bin/brew; then
    /opt/homebrew/bin/brew bundle
  else
    error "Error: Brew is not available"
  fi

  # Colorls
  sudo gem install colorls

  finish
}

install_python() {
  if [ $# -ne 1 ]; then
    echo "Usage: install_python <version>"
    return
  fi

  version=$1

  if ! _exists python@$version; then
    info "Installing Python $version..."

    if [ "$(uname)" = "Darwin" ]; then
      /opt/homebrew/bin/brew install python@$version
      /opt/homebrew/bin/brew link --overwrite python@$version
    elif [ "$(uname)" = "Linux" ]; then
      sudo apt install wget build-essential libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev
      sudo add-apt-repository ppa:deadsnakes/ppa
      sudo apt install python$version
    else
      error "Error: Failed to install Python $version!"
      exit 1
    fi
  else
    success "You already have Python $version installed. Skipping..."
  fi

  packages=(
    pip
    poetry
  )
  echo "Installing: ${packages[*]}"
  python$version -m pip install --upgrade "${packages[@]}"

  finish
}
